{{ define "settings" }}
  <section class="p-5">
    <form action="/settings/checks/{{ .Check.Id }}" method="post">
      <h2>Configuration</h2>
      <label for="visibility">Visibility</label>
      <select name="visibility" id="visibility" required>
        <option
          {{ if eq .Check.Visibility "PUBLIC" }}selected="selected"{{ end }}
          value="PUBLIC"
        >
          Public
        </option>
        <option
          {{ if eq .Check.Visibility "PRIVATE" }}selected="selected"{{ end }}
          value="PRIVATE"
        >
          Private
        </option>
      </select>
      <p>
        Visibility determines who can see the check. If set to
        <code>public</code>, it will be visible to everyone on the homepage.
        Otherwise it will be only visible to signed in users.
      </p>
      <label for="group">Check Group</label>
      <input
        type="text"
        name="group"
        id="group"
        value="{{ .Check.Group }}"
        required
      />
      <p>
        Group checks together. This affects how they are presented on the
        homepage.
      </p>
      <label for="workergroups">Worker Groups</label>
      <input
        type="text"
        name="workergroups"
        id="workergroups"
        value="{{ range .Check.WorkerGroups }}{{ . }}{{ end }}"
        required
      />
      <p>Worker groups are used to distribute the check to specific workers.</p>
      <label for="schedule">Schedule</label>
      <input
        type="text"
        name="schedule"
        id="schedule"
        value="{{ .Check.Schedule }}"
        required
      />
      <p>
        Schedule is a cron expression that defines when the check should be
        executed.
        <br />
        You can also use <code>@every [interval]</code> where interval is a
        duration like 5m, 1h, 60s. Or use <code>@hourly</code>,
        <code>@daily</code>, <code>@weekly</code>, <code>@monthly</code>,
        <code>@yearly</code>.
      </p>
      <label for="script">Script</label>
      <textarea required id="script" name="script" class="h-96">
{{ ScriptUnescapeString .Check.Script }}</textarea
      >
      <div
        id="editor"
        class="block w-full h-96 rounded-lg border border-gray-300 overflow-hidden hidden"
      ></div>
      <p>
        Script is what determines the status of a service. You can read more
        about it on
        <a target="_blank" href="https://k6.io/docs/using-k6/http-requests/"
          >k6 documentation</a
        >.
      </p>
      <button type="submit" onclick="save()">Save</button>
    </form>
  </section>

  <div class="flex md:flex-row flex-col gap-4 h-min">
    <section class="p-5 flex-1">
      <h2 class="mb-2 flex flex-row gap-2">
        State
        {{ if eq .Check.State "ACTIVE" }}
          <span
            class="self-center h-fit w-fit px-2 text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800"
          >
            ACTIVE
          </span>
        {{ else if eq .Check.State "PAUSED" }}
          <span
            class="self-center h-fit w-fit px-2 text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800"
          >
            PAUSED
          </span>
        {{ end }}
      </h2>
      <p class="text-sm mb-2">
        Pausing the check will stop it from executing. This can be useful in
        cases of expected downtime. Or when the check is not needed anymore.
      </p>
      {{ if eq .Check.State "ACTIVE" }}
        <a
          class="block text-center py-2.5 px-5 me-2 mb-2 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100"
          href="/settings/checks/{{ .Check.Id }}/disable"
          >Pause</a
        >
      {{ else if eq .Check.State "PAUSED" }}
        <a
          class="block text-center py-2.5 px-5 me-2 mb-2 text-sm font-medium text-gray-900 focus:outline-none bg-white rounded-lg border border-gray-200 hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:ring-gray-100"
          href="/settings/checks/{{ .Check.Id }}/enable"
          >Resume</a
        >
      {{ end }}
    </section>

    <section class="p-2 flex-1 border-4 border-red-300">
      <h2 class="mb-2">Danger Zone</h2>
      <p class="text-sm mb-2">Permanently delete this check.</p>
      <a
        class="block text-center focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 me-2 mb-2"
        href="/settings/checks/{{ .Check.Id }}/delete"
        >Delete</a
      >
    </section>
  </div>

  <section>
    <table>
      <caption>
        History
        <p>Last 10 executions of check script.</p>
      </caption>
      <thead>
        <tr>
          <th>Status</th>
          <th>Worker Group</th>
          <th>Created At</th>
          <th>Duration</th>
          <th>Note</th>
        </tr>
      </thead>
      <tbody>
        {{ range .History }}
          <tr>
            <td>
              <span
                class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full {{ if eq .Status "SUCCESS" }}
                  bg-green-100 text-green-800
                {{ else }}
                  bg-red-100 text-red-800
                {{ end }}"
              >
                {{ .Status }}
              </span>
            </td>
            <td>
              <span
                class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-blue-100 text-blue-800"
              >
                {{ .WorkerGroupName }}
              </span>
            </td>
            <td>
              {{ .CreatedAt.Time.Format "2006-01-02 15:04:05" }}
            </td>
            <td>{ .Duration }</td>
            <td class="whitespace-normal">
              {{ .Note }}
            </td>
          </tr>
        {{ end }}
      </tbody>
    </table>
  </section>

  <script src="/static/monaco/vs/loader.js"></script>
<script>
  document.getElementById("editor").classList.remove("hidden");
  document.getElementById("script").hidden = true;

  function save() {
    const script = window.editor.getValue();
    document.getElementById('script').value = script;
  }

  function htmlDecode(input) {
    var doc = new DOMParser().parseFromString(input, "text/html");
    return doc.documentElement.textContent;
  }
  script = htmlDecode("{{ .Check.Script }}")

  require.config({ paths: { vs: '/static/monaco/vs' } });
  require(['vs/editor/editor.main'], function () {
    window.editor = monaco.editor.create(document.getElementById('editor'), {
      value: script,
      language: 'javascript',
      minimap: { enabled: false },
      codeLens: false,
      contextmenu: false,
      scrollBeyondLastLine: false,
    });

    const divElem = document.getElementById('editor');
    const resizeObserver = new ResizeObserver(entries => {
        window.editor.layout();
    });
    resizeObserver.observe(divElem);
  });
</script>
{{ end }}
